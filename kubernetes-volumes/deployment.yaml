apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
  namespace: homework
  labels:
    app: nginx
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 8000
        command: ["/bin/bash", "-c"]
        args:
          - |
            cat <<EOF > /etc/nginx/nginx.conf
            events {}
            http {
              server {
                listen 8000;
                root /homework;
                index index.html;
                 location /conf/file {
                  alias /homework/conf/file;
                  autoindex on;
                }
              }
            }
            EOF
            nginx -g 'daemon off;'
        lifecycle:
            preStop:
              exec:
                command: ["rm", "/homework/index.html"]
        volumeMounts:
        - name: shared-volume
          mountPath: /homework
        - name: config-volume
          mountPath: /homework/conf/
        readinessProbe:
          httpGet:
            path: /conf/file
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
      - name: init
        image: busybox:1.28
        command:
        - wget
        - "-O"
        - "/init/index.html"
        - http://otus.ru/
        volumeMounts:
        - name: shared-volume
          mountPath: "/init"
      dnsPolicy: Default
      volumes:
      - name: shared-volume
        persistentVolumeClaim:
          claimName: my-pvc
      - name: config-volume
        configMap:
          name: my-config
      nodeSelector:
        homework: "true"
